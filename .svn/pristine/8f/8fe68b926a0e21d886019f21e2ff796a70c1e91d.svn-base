<template>
  <div>
    <mt-header :title="$route.query.type==='1'?'修改姓名':'性别'">
  <a slot="left">
    <mt-button @click="$router.go(-1)">取消</mt-button>
  </a>
  <a slot="right" @click="confirm">确定</a>
</mt-header>
<mt-field label="姓名" v-model="$route.query.name" v-if="$route.query.type==='1'" placeholder='请输入名字'></mt-field>
<div v-else-if="$route.query.type==='2'">
<mt-field label="手机号" v-model="$route.query.mobile" readonly :disableClear='true'></mt-field>
<mt-field label="旧密码" placeholder="输入旧密码" type="password" v-model="updataPass.oldPass" ></mt-field>
<mt-field label="新密码" placeholder="输新密码" type="password" v-model="updataPass.newPass" autocomplete='off'></mt-field>
<mt-field label="确认密码" placeholder="输入确认密码" type="password" v-model="updataPass.confirmPass" autocomplete='off'></mt-field>
</div>
<div v-else-if="$route.query.type==='4'" class="edite-header-icon">
  <img :src="hedaerIcon||imgs" alt="">
  <section class="select-img">
  <input class="select-comon" type='file'  @change="chooseImage"/>
   <mt-button size='large' type="primary" class="select-comon">从相册选一张</mt-button>
  </section>

</div>
    <mt-radio
    v-else
  v-model="$route.query.sex"
  align='right'
  :options="opts">
</mt-radio>
  </div>
</template>
<script>
import imgs from '@/assets/images/photo.png'
import {updataUserInfo, choosePicture} from '@/api'
export default {
  name: 'Edite',
  data () {
    return {
      opts: [{label: '男', value: '1'}, {label: '女', value: '2'}, {label: '保密', value: '0'}],
      updataPass: {},
      imgs,
      hedaerIcon: ''
    }
  },
  created () {
    this.hedaerIcon = this.$route.query.headImgUrl
  },
  methods: {
    confirm () {
      updataUserInfo(this.$route.query).then(res => {
        this.$store.dispatch('getPerInfo').then(() => {
          this.$router.go(-1)
        })
      })
    },
    // 上传图片
    chooseImage (e) {
      this.$popBox.Indicator.open()
      let files = e.target.files[0] || e.dataTransfer.files[0]
      let formdata = new FormData()
      formdata.append('picFile', files)
      choosePicture(formdata).then(res => {
        if (res.code === 200) {
          this.$route.query.headImgUrl = res.data
          this.hedaerIcon = res.data
        }
        this.$popBox.Indicator.close()
      })
      // let reader = window.FileReader ? new FileReader() : false
      // if (reader) {
      //   reader.readAsDataURL(files)
      //   reader.onload = e => {
      //     this.$popBox.Indicator.open()
      //   }
      //   reader.onloadend = e => {
      //     this.$popBox.Indicator.close()
      //     this.hedaerIcon = e.target.result
      //   }
      // }
    }
  }
}
</script>
<style lang="scss" scoped>
/deep/.mint-radiolist .mint-radiolist-title{
  display: none;
}
.edite-header-icon{
  text-align: center;
  padding: 30px;
  img{
width: 100%;
margin-bottom: 100px;
max-height: 370px;
  }
}
.select-img{
  position: relative;
.select-comon{
  position: absolute;
&:first-child{
  z-index: 5;
  width: 100%;
left: 0px;
height: 46px;
opacity: 0;
}
}
}
</style>
