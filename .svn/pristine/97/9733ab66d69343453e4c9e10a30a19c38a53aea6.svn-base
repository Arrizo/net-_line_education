<template>
<!-- v-infinite-scroll='' infinite-scroll-distance="10" infinite-scroll-disabled='loading' -->
<div class="study">
   <mt-navbar v-model="selected">
  <mt-tab-item id="tab1">学习任务</mt-tab-item>
  <mt-tab-item id="tab2">练习任务</mt-tab-item>
</mt-navbar>
<mt-tab-container v-model="selected" :swipeable='true'>
  <mt-tab-container-item id="tab1" >
<mt-cell v-for="(item,indexs) in planList[0].detail.unlearnedCourse" :key="indexs" :title="getViedoName(item)">
  <span>icon 是图片</span>
</mt-cell>
  </mt-tab-container-item>
    <mt-tab-container-item  id="tab2" >
    <div class="plan-container">
<div class="plan-item-container"  v-for="(item,index) in planList" :key="index">
<div class="plan-item-header"><h1>{{item.name}}</h1><span><mt-badge :color="'#26a2ff'" size='normal'>{{item.qualified?'完成:100%':percent(item)}}</mt-badge></span></div>
<div class="plan-item-body">
  <div class="body-icon">{{current(index)}}</div>
  <div class="body-title">
     <h2>已测试题数:{{item.detail.testedNum}}</h2><h2>已观看的课时:{{item.detail.learnedCourse}}</h2><h2>已模拟考试数:{{item.detail.practiceNum}}</h2>
    </div>
 <div class="body-title">
     <h2>测试题总数:{{item.testNum}}</h2><h2>观看课总时数:{{item.courseIds}}</h2><h2>模拟考试总数:{{item.practiceNum}}</h2>
   </div>
    <!-- <mt-button size="small" type="primary" @click="$router.push({name:'Plan_Details',params:{detail}})">计划详情</mt-button> -->
</div>
<!-- <mt-progress :value="60" class="progress">
  <div slot="start">0%</div>
  <div slot="end">{{60}}%</div>
</mt-progress> -->
</div>
<loading-more :loading='loading' :loading-more='allLoading'/>
  </div>
  </mt-tab-container-item>
</mt-tab-container>

</div>
</template>
<script>
import {studyPlan, courseDetails} from '@/api'
export default {
  name: 'StudyPlan',
  data () {
    return {
      selected: 'tab1',
      planList: [],
      loading: false,
      allLoading: false
    }
  },
  created () {
    this.getPlan()
  },
  methods: {
    getPlan () {
      studyPlan().then(res => {
        if (res.code === 200) {
          this.planList = res.data
        }
      })
    },
    getViedoName (id) {
      console.log(3333, id)
      let a = '22'
      courseDetails({courseId: '1260390561798426626'}).then(res => {
        a = res.data.courseName
      })
      return a
    },
    percent (item) {
      return 10
      // let count = 0; let counted = 0
      // if (item.testNum) {
      //   count += item.testNum
      //   counted += item.detail.testedNum
      // }
      // if (item.practiceNum) {
      //   count += item.practiceNum
      //   counted += item.detail.practiceNum
      // }
      // if (item.courseIds.length) {
      //   count += item.courseIds.length
      //   counted += item.detail.learnedCourse.length
      // }
      // let calc = '完成 ' + (count ? ((counted / count * 100).toFixed(2)) : 0) + '%'
      // return calc
    },
    plan_details () {

    },
    current (index) {
      let indexs = index + 1
      return indexs > 9 ? indexs : '0' + indexs
    }
  },
  components: {
    // StudyItem
  }
}
</script>
<style lang="scss" scoped>
.plan-container{
  margin:0px 10px;
}
.plan-item-container{
margin-bottom: 10px;
    box-shadow: 0px 0px 1px 2px #edc5a840;

.plan-item-header{
  height: 30px;
  font-size: 16px;
display: flex;
align-items: center;
justify-content: space-between;
 padding: 5px 35px;
}
.plan-item-body{
display: flex;
align-items: center;
justify-content: space-around;
padding: 5px 0px;
   border-top: 1px solid #e4e4e6;
.body-icon{
display:inline-block;
width: 30px;
height: 30px;
color: #fff;
background: goldenrod;
line-height: 30px;
text-align: center;
border-radius: 50%
}
}
.body-title{
  h2{
    margin: 2px auto;
    color: #949494;
  }
}
}
.progress{
  padding: 0px 10px;
}
/deep/.study{
.mint-navbar{
  .mint-tab-item {
      .mint-tab-item-label{
        font-size:18px;
      }
      &.is-selected{
         border-bottom: 5px solid #26a2ff;/*no*/
      }
  }
}
}
</style>
